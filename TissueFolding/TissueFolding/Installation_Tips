Legion installation:

tsting gsl:
to use g++ and gsl, you need to activate the correct modules:
	module unload compilers mpi mkl
	module load compilers/gnu/4.9.2
	module load mpi/openmpi/1.10.1/gnu-4.9.2
	module load gsl/1.16/gnu-4.9.2 
to compile a sample, you need:
	g++ -o test1 test1.cpp  -lgsl -lgslcblas

testing pardiso: 
	module unload compilers mpi mkl
	module load compilers/gnu/4.9.2
	module load mpi/openmpi/1.10.1/gnu-4.9.2
	module load gsl/1.16/gnu-4.9.2 
	module load openblas/0.2.14/gnu-4.9.2
	export PATH=/home/ucgamto/LocalLibs/:$PATH
	export  LD_LIBRARY_PATH=/home/ucgamto/LocalLibs/:$LD_LIBRARY_PATH
	export  LIBRARY_PATH=/home/ucgamto/LocalLibs/:$LIBRARY_PATH
	export OMP_NUM_THREADS=1
compile:
	g++ -o pardiso_sym pardiso_sym.cpp -L${OPENBLASROOT}/lib -lopenblas -lpardiso500-GNU481-X86-64  -fopenmp
	(openblas is needed to replace -llapack, it loads the lapack libraries). (-openmp is for OpenMp with g++ compiler, if I was using intel compiler, it would be -openmp)

testing ublas:
	module load python/2.7.9
	module load boost/1_54_0/gnu-4.9.2
compile:
	g++ -o cholesky_test cholesky_test.cpp 


test full code:
	g++  -o "TissueFolding" $(OBJS) $(USER_OBJS) $(LIBS) -L${OPENBLASROOT}/lib -lopenblas -lpardiso500-GNU481-X86-64  -fopenmp  -I/shared/ucl/apps/gsl/1.16/gcc/include  -lgsl -lgslcblas


requesting test node on legion:
	qrsh -l h_rt=00:15:00, memory=8G
job submission:
	the bash setting should indicate this is a login shell:
	#!bin/bash -l

For any error in the form :
no matching function for call to â€˜project(boost::numeric::ublas::

you need to include _proxy headers as well as the normal headers in ublas. As an example, if you are adding 
#include <Matrix.hpp>, 
you also need to add:
#include <Matrix_proxy.hpp>.

Whenever you are including LU decomposition, also include triangular:
#include <boost/numeric/ublas/triangular.hpp>
#include <boost/numeric/ublas/lu.hpp>
